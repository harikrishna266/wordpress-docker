version: '3.9'

services:
  nginx:
    container_name: nginx1
    build:
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress:/var/www/html:delegated
      - ./custom-plugins/fictive_studios:/var/www/html/wp-content/plugins/builder
      - webcomponents:/var/www/html/wp-content/plugins/builder/public/js
    depends_on:
      - php
      - express
  php:
    container_name: php1
    build:
      context: .
      dockerfile: php.dockerfile
    environment:
      WORDPRESS_DB_HOST: "${WORDPRESS_DB_HOST}"
      WORDPRESS_DB_USER: "${WORDPRESS_DB_USER}"
      WORDPRESS_DB_PASSWORD: "${WORDPRESS_DB_PASSWORD}"
      WORDPRESS_DB_NAME: "${WORDPRESS_DB_NAME}"
    volumes:
      - wordpress:/var/www/html:delegated
      - ./custom-plugins/fictive_studios:/var/www/html/wp-content/plugins/builder/three-d-ui
  wordpress:
    depends_on:
      - mysql
    image: wordpress:latest
    container_name: wordpress
    restart: unless-stopped
    volumes:
      - wordpress:/var/www/html

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: wp
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      MYSQL_USERNAME: user
      MYSQL_ROOT_PASSWORD: secret

  express:
    build:
      context: .
      dockerfile: express/node.dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./express:/usr/src/app/express

  web-component:
    build:
      context: .
      dockerfile: web-components/.dockerfile
    volumes:
      - webcomponents:/usr/share/nginx/html/dist/apps/three-d-ui/browser
volumes:
  wordpress:
  mysql_data:
  webcomponents:



